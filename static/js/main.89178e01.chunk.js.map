{"version":3,"sources":["DataModel.js","LeaderData.js","Secrets.js","Tile.js","PopUp.js","Chessboard.js","Leaderboard.js","App.js","reportWebVitals.js","index.js"],"names":["sleep","ms","Promise","resolve","setTimeout","theDataModel","DataModel","this","board","subscribers","numBlack","numWhite","nextPlayer","switchStatus","mode","legal","isBusy","weight","showLegalMoves","computer_i","computer_j","max","Infinity","i","j","isValidMove","score","checked","isLegal","updataSubscribers","callback","push","sub","key","parseInt","code","setLegal","opponent","hasLegalMove","a","clearLegalMoves","getRowColByKey","placePiece","updateNumPieces","flipPieces","updateNextPlayer","checkWin","getComputerMove","getWinner","countBlack","countWhite","x1","x2","col","y1","y2","row","checkVertically","checkHorizontally","checkDiagonallyBottomRight","checkDiagonallyBottomLeft","flipVertically","flipHorizontally","flipDiagonallyBottomRight","flipDiagonallyBottomLeft","app","getApps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","theLeaderboard","db","initializeFirestore","useFetchStreams","Leaderboard","asyncInit","loadLeaders","q","query","collRef","limit","getDocs","querySnap","empty","docs","forEach","qDocSnap","id","data","leaders","updateSubscribers","addItem","name","item","addDoc","docRef","collection","sort","b","Array","from","getLeaderboard","Tile","props","number","piece","onPress","className","onClick","PopUp","winner","onClose","onStart","onSubmit","useState","inputText","setInputText","disabled","setDisabled","type","InputGroup","FormControl","placeholder","value","maxLength","onChange","event","target","Chessboard","dataModel","leaderboard","boardArray","getBoardArray","getLeadersCopy","setLeaders","visible","setVisible","currentPlayer","setCurrentPlayer","setNumBlack","setNumWhite","setSwitchStatus","setMode","getBoardFromArray","addPiece","setBoard","handleClose","handleNewGame","resetBoard","handleMultiplayer","useEffect","subscribeToUpdates","getNumPieces","getLegalStatus","getNextPlayer","onColor","boxShadow","uncheckedIcon","checkedIcon","activeBoxShadow","Math","playerName","Item","map","App","document","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.89178e01.chunk.js","sourcesContent":["const BOARD_SIZE = 8;\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nclass DataModel {\n    constructor(){\n        this.board = [ // black: 2, white: 1, hint: 0.5\n            [0,0,0,0,0,0,0,0],\n            [0,0,0,0,0,0,0,0],\n            [0,0,0,0,0,0,0,0],\n            [0,0,0,2,1,0,0,0],\n            [0,0,0,1,2,0,0,0],\n            [0,0,0,0,0,0,0,0],\n            [0,0,0,0,0,0,0,0],\n            [0,0,0,0,0,0,0,0]\n        ];\n        // this.board = [ // black: 2, white: 1, hint: 0.5\n        //     [2,2,2,2,2,2,2,2],\n        //     [1,1,1,1,1,1,1,1],\n        //     [2,2,2,2,2,2,2,2],\n        //     [2,2,2,2,2,2,2,2],\n        //     [2,2,2,2,2,2,2,2],\n        //     [2,2,2,2,2,2,2,2],\n        //     [2,2,2,2,2,2,2,1],\n        //     [2,2,2,2,2,2,1,0],\n        // ];\n        this.subscribers = [];\n        this.numBlack = 2;\n        this.numWhite = 2;\n        this.nextPlayer = 2;\n        this.switchStatus = true;\n        this.mode = 'computer';\n        this.legal = true;\n        this.isBusy = false;\n        this.weight = [\n            [500,-25,10,5,5,10,-25,500],\n            [-25,-45,1,1,1,1,-45,-25],\n            [10,1,3,2,2,3,1,10],\n            [5,1,2,1,1,2,1,5],\n            [5,1,2,1,1,2,1,5],\n            [10,1,3,2,2,3,1,10],\n            [-25,-45,1,1,1,1,-45,-25],\n            [500,-25,10,5,5,10,-25,500]\n        ];\n        this.showLegalMoves();\n    }\n    getComputerMove(){\n        let max = -Infinity;\n        let computer_i, computer_j;\n        for (let i = 0; i < BOARD_SIZE; i++) {\n            for (let j = 0; j < BOARD_SIZE; j++) {\n                if (this.isValidMove(i, j, this.nextPlayer)){\n                    const score = this.weight[i][j];\n                    if (score > max) {\n                        computer_i = i;\n                        computer_j = j;\n                        max = score;\n                    }\n                }\n            }\n        }\n        return {computer_i: computer_i, computer_j: computer_j};\n    }\n    setMode(mode){\n        this.mode = mode;\n    }\n    getLegalStatus(){\n        return this.legal;\n    }\n\n    setSwitchStatus(checked) {\n        this.switchStatus = checked;\n    }\n    setLegal(isLegal){\n        this.legal = isLegal;\n    }\n    resetBoard() {\n        this.board = [\n            [0,0,0,0,0,0,0,0],\n            [0,0,0,0,0,0,0,0],\n            [0,0,0,0,0,0,0,0],\n            [0,0,0,2,1,0,0,0],\n            [0,0,0,1,2,0,0,0],\n            [0,0,0,0,0,0,0,0],\n            [0,0,0,0,0,0,0,0],\n            [0,0,0,0,0,0,0,0]\n        ];\n        this.numBlack = 2;\n        this.numWhite = 2;\n        this.nextPlayer = 2;\n        this.legal = true;\n        this.isBusy = false;\n        if (this.switchStatus) this.showLegalMoves();\n        else this.updataSubscribers();\n    }\n    subscribeToUpdates(callback) {\n        this.subscribers.push(callback);\n    }\n    updataSubscribers() {\n        for (let sub of this.subscribers) {\n            sub();\n        }\n    }\n    getRowColByKey(key){\n        const j = key % 10 - 1;\n        const i = parseInt((key % 100) / 10) - 1;\n        return {i: i, j: j}\n    }\n    placePiece(i, j, code){\n        this.board[i][j] = code;\n        this.setLegal(true);\n    }\n    updateNextPlayer(){\n        const opponent = this.nextPlayer === 2 ? 1 : 2;\n        this.nextPlayer = this.hasLegalMove(opponent) ? opponent : this.nextPlayer;\n    }\n    async addPiece(key) {\n        if (this.isBusy) return;\n        this.isBusy = true;\n        this.clearLegalMoves();\n        const {i, j} = this.getRowColByKey(key);\n\n        if (!this.isValidMove(i, j, this.nextPlayer)){\n            this.setLegal(false);\n            if (this.switchStatus) this.showLegalMoves();\n            this.updataSubscribers();\n            this.isBusy = false;\n            return;\n        }\n        this.placePiece(i, j, this.nextPlayer);\n        this.updateNumPieces();\n        this.updataSubscribers();\n\n        await sleep(500);\n        this.flipPieces(i, j);\n        this.updateNumPieces();\n        this.updateNextPlayer();\n        this.updataSubscribers();\n\n        if (!this.checkWin()) {\n            if (this.mode === 'computer') {\n                this.clearLegalMoves();\n                while(this.nextPlayer === 1){\n                    const {computer_i, computer_j} = this.getComputerMove();\n                    await sleep(1000);\n                    this.placePiece(computer_i, computer_j, this.nextPlayer);\n                    this.updateNumPieces();\n                    this.updataSubscribers();\n        \n                    await sleep(500);\n                    this.flipPieces(computer_i, computer_j);\n                    this.updateNumPieces();\n                    this.updateNextPlayer();\n                }\n            }\n        }\n\n        if (this.switchStatus) this.showLegalMoves();\n        else this.updataSubscribers();\n        this.isBusy = false;\n    }\n    showLegalMoves() {\n        for (let i = 0; i < BOARD_SIZE; i++) {\n            for (let j = 0; j < BOARD_SIZE; j++) {\n                if (this.isValidMove(i, j, this.nextPlayer)) this.board[i][j] = 0.5;\n            }\n        }\n        this.updataSubscribers();\n    }\n    clearLegalMoves() {\n        for (let i = 0; i < BOARD_SIZE; i++) {\n            for (let j = 0; j < BOARD_SIZE; j++) {\n                if (this.board[i][j] === 0.5) this.board[i][j] = 0;\n            }\n        }\n        this.updataSubscribers();\n    }\n    getWinner() {\n        return this.numBlack > this.numWhite ? 2 : 1;\n    }\n    checkWin() {\n        if (!this.hasLegalMove(1) && !this.hasLegalMove(2)){\n            this.isBusy = true;\n            return this.getWinner();\n        }\n        else return 0;\n    }\n    getNextPlayer() {\n        return this.nextPlayer;\n    }\n    getBoardArray() {\n        return this.board;\n    }\n    updateNumPieces() {\n        let countBlack = 0;\n        let countWhite = 0;\n        for (let i = 0; i < BOARD_SIZE; i++) {\n            for (let j = 0; j < BOARD_SIZE; j++) {\n                if (this.board[i][j] === 2) countBlack++;\n                else if (this.board[i][j] === 1) countWhite++;\n            }\n        }\n        this.numBlack = countBlack;\n        this.numWhite = countWhite;\n    }\n    getNumPieces(code) {\n        return code === 2 ? this.numBlack : this.numWhite;\n    }\n    hasLegalMove(code) {\n        for (let i = 0; i < BOARD_SIZE; i++) {\n            for (let j = 0; j < BOARD_SIZE; j++) {\n                if (this.isValidMove(i, j, code)) return true;\n            }\n        }\n        return false\n    }\n    checkVertically(x1, x2, col, code) { // x1 < x2\n        for (let i = x1 + 1; i < x2; i++) {\n            if (this.board[i][col] === 0 || this.board[i][col] === 0.5 || this.board[i][col] === code) return false;\n        }\n        return true;\n    }\n    checkHorizontally(y1, y2, row, code) { // y1 < y2\n        for (let i = y1 + 1; i < y2; i++) {\n            if (this.board[row][i] === 0 || this.board[row][i] === 0.5 || this.board[row][i] === code) return false;\n        }\n        return true;\n    }\n    checkDiagonallyBottomRight(x1, x2, y1, code) { // x1 < x2\n        for (let i = x1 + 1; i < x2; i++) {\n            const j = y1 + i - x1;\n            if (this.board[i][j] === 0 || this.board[i][j] === 0.5 || this.board[i][j] === code) return false;\n        }\n        return true;\n    }\n    checkDiagonallyBottomLeft(x1, x2, y1, code) { // x1 < x2\n        for (let i = x1 + 1; i < x2; i++) {\n            const j = y1 - i + x1;\n            if (this.board[i][j] === 0 || this.board[i][j] === 0.5 || this.board[i][j] === code) return false;\n        }\n        return true;\n    }\n    flipVertically(x1, x2, col) {\n        for (let i = x1 + 1; i < x2; i++) {\n            this.board[i][col] = this.board[x1][col];\n        }\n    }\n    flipHorizontally(y1, y2, row) {\n        for (let i = y1 + 1; i < y2; i++) {\n            this.board[row][i] = this.board[row][y1];\n        }\n    }\n    flipDiagonallyBottomRight(x1, x2, y1) {\n        for (let i = x1 + 1; i < x2; i++) {\n            const j = y1 + i - x1;\n            this.board[i][j] = this.board[x1][y1];\n        }\n    }\n    flipDiagonallyBottomLeft(x1, x2, y1) {\n        for (let i = x1 + 1; i < x2; i++) {\n            const j = y1 - i + x1;\n            this.board[i][j] = this.board[x1][y1];\n        }\n    }\n    isValidMove(row, col, code) {\n        if (this.board[row][col] === 1 || this.board[row][col] === 2) return false;\n        // up, down, left, right\n        for (let i = row - 2; i >= 0; i--) if (this.board[i][col] === code && this.checkVertically(i, row, col, code)) return true;\n        for (let i = row + 2; i < BOARD_SIZE; i++) if (this.board[i][col] === code && this.checkVertically(row, i, col, code)) return true;\n        for (let i = col - 2; i >= 0; i--) if (this.board[row][i] === code && this.checkHorizontally(i, col, row, code)) return true;\n        for (let i = col + 2; i < BOARD_SIZE; i++) if (this.board[row][i] === code && this.checkHorizontally(col, i, row, code)) return true;\n        // upper left\n        for (let i = row - 2; i >= 0; i--) {\n            const j = col - row + i;\n            if (j >=0 && this.board[i][j] === code && this.checkDiagonallyBottomRight(i, row, j, code)) return true;\n        }\n        // upper right\n        for (let i = row - 2; i >= 0; i--) {\n            const j = col + row - i;\n            if (j < BOARD_SIZE && this.board[i][j] === code && this.checkDiagonallyBottomLeft(i, row, j, code)) return true;\n        }\n        // bottom left\n        for (let i = row + 2; i < BOARD_SIZE; i++) {\n            const j = col - i + row;\n            if (j >=0 && this.board[i][j] === code && this.checkDiagonallyBottomLeft(row, i, col, code)) return true;\n        }\n        // bottom right\n        for (let i = row + 2; i < BOARD_SIZE; i++) {\n            const j = col + i - row;\n            if (j < BOARD_SIZE && this.board[i][j] === code && this.checkDiagonallyBottomRight(row, i, col, code)) return true;\n        }\n        return false;\n    }\n    flipPieces(row, col) {\n        // up, down, left, right\n        const code = this.board[row][col];\n        for (let i = row - 1; i >= 0; i--) if (this.board[i][col] === code && this.checkVertically(i, row, col, code)) this.flipVertically(i, row, col);\n        for (let i = row + 1; i < BOARD_SIZE; i++) if (this.board[i][col] === code && this.checkVertically(row, i, col, code)) this.flipVertically(row, i, col);\n        for (let i = col - 1; i >= 0; i--) if (this.board[row][i] === code && this.checkHorizontally(i, col, row, code)) this.flipHorizontally(i, col, row);\n        for (let i = col + 1; i < BOARD_SIZE; i++) if (this.board[row][i] === code && this.checkHorizontally(col, i, row, code)) this.flipHorizontally(col, i, row);\n        // upper left\n        for (let i = row - 1; i >= 0; i--) {\n            const j = col - row + i;\n            if (j >=0 && this.board[i][j] === code && this.checkDiagonallyBottomRight(i, row, j, code)) this.flipDiagonallyBottomRight(i, row, j);\n        }\n        // upper right\n        for (let i = row - 1; i >= 0; i--) {\n            const j = col + row - i;\n            if (j < BOARD_SIZE && this.board[i][j] === code && this.checkDiagonallyBottomLeft(i, row, j, code)) this.flipDiagonallyBottomLeft(i, row, j);\n        }\n        // bottom left\n        for (let i = row + 1; i < BOARD_SIZE; i++) {\n            const j = col - i + row;\n            if (j >=0 && this.board[i][j] === code && this.checkDiagonallyBottomLeft(row, i, col, code)) this.flipDiagonallyBottomLeft(row, i, col);\n        }\n        // bottom right\n        for (let i = row + 1; i < BOARD_SIZE; i++) {\n            const j = col + i - row;\n            if (j < BOARD_SIZE && this.board[i][j] === code && this.checkDiagonallyBottomRight(row, i, col, code)) this.flipDiagonallyBottomRight(row, i, col);\n        }\n    }\n}\nlet theDataModel;\nexport function getDataModel() {\n    if(!theDataModel) {\n        theDataModel = new DataModel();\n    }\n    return theDataModel;\n}\n","import { initializeApp, getApps } from 'firebase/app';\nimport { \n  initializeFirestore, collection, getDocs, query, addDoc, limit\n} from \"firebase/firestore\";\nimport { firebaseConfig } from './Secrets';\n\nlet app;\nif (getApps().length === 0){\n  app = initializeApp(firebaseConfig);\n} \nconst db = initializeFirestore(app, {\n    useFetchStreams: false\n});\n\nclass Leaderboard {\n    constructor(){\n        this.collRef = collection(db, 'leaderboard');\n        this.leaders = [];\n        this.subscribers = [];\n        this.asyncInit();\n    }\n    asyncInit = async () => {\n        await this.loadLeaders();\n    }\n    loadLeaders = async () => {\n        const q = query(this.collRef, limit(10));\n        const querySnap = await getDocs(q);\n        if (querySnap.empty) return;\n        querySnap.docs.forEach(qDocSnap => {\n          let key = qDocSnap.id;\n          let data = qDocSnap.data();\n          data.key = key;\n          this.leaders.push(data);\n        });\n        this.updateSubscribers();\n    }\n    addItem = async (name, score) => {\n        const item = {\n            name: name,\n            score: score,\n        };\n        let docRef = await addDoc(this.collRef, item);\n        item.key = docRef.id;\n        this.leaders.push(item);\n        this.updateSubscribers();\n      }\n    subscribeToUpdates(callback) {\n        this.subscribers.push(callback);\n    }\n    updateSubscribers() {\n        for (let sub of this.subscribers) {\n            sub();\n        }\n    }\n    getLeadersCopy() {\n        this.leaders.sort((a, b) => b.score - a.score);\n        return Array.from(this.leaders);\n    }\n}\n\nlet theLeaderboard;\nexport function getLeaderboard() {\n    if(!theLeaderboard) {\n        theLeaderboard = new Leaderboard();\n    }\n    return theLeaderboard;\n}\n","export const firebaseConfig = {\n    apiKey: \"AIzaSyA0SVlli6rx1wYyXKiYXH0MgwiVWHfQk-c\",\n    authDomain: \"edu-umich-zzhiyuan-reversi.firebaseapp.com\",\n    projectId: \"edu-umich-zzhiyuan-reversi\",\n    storageBucket: \"edu-umich-zzhiyuan-reversi.appspot.com\",\n    messagingSenderId: \"868073070089\",\n    appId: \"1:868073070089:web:cd65df734b7834b1c3a2d8\"\n};","import \"./App.css\";\n\nfunction Tile(props) {\n    const {number, piece, onPress} = props;\n    return <div className={\"tile \" + (number%2===1 ? \"tile-black\" : \"tile-white\")} onClick={onPress}>\n                <div className={piece === 0 ? \"\" :\n                    (piece===2 ? \"piece piece-black\" : \n                        (piece === 1 ? \"piece piece-white\" :\n                            (\"potential \" + (number%2===1 ? \"potential-black\" : \"potential-white\"))\n                        )\n                    )}>\n                </div>\n            </div>\n}\n\nexport default Tile;","import { useState } from 'react';\nimport { InputGroup, FormControl } from 'react-bootstrap';\nimport \"./App.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction PopUp(props) {\n    const {mode, winner, score, onClose, onStart, onSubmit} = props;\n    const [inputText, setInputText] = useState('');\n    const [disabled, setDisabled] = useState(false);\n    const handleChange = (event) => {\n        setInputText(event.target.value);\n      };\n    return <div className=\"modal-background\">\n                <div className=\"content-box\">\n                    <span className=\"close\" onClick={onClose}>&times;</span>\n                    {mode === 'multiplayer' ? \n                        <>\n                            <p className=\"congrats\">{winner === 2 ? \"Black\" : \"White\"} won! </p>\n                            <button type=\"button\" onClick={onStart} className=\"btn btn-outline-dark\">Start a new game! </button>\n                        </>\n                    :\n                        <>\n                            {winner === 2 ?\n                                <>\n                                    <p className=\"congrats special-congrats\">You won! </p>                                                  \n                                    <InputGroup id=\"submit-name\">\n                                        <FormControl type=\"text\" placeholder=\"Enter your name\" value={inputText} maxLength={15} onChange={handleChange}/>\n                                        <button disabled={disabled} type=\"button\" className=\"btn btn-outline-dark\" onClick={()=>{\n                                            onSubmit(inputText, score);\n                                            setDisabled(true);\n                                        }}>Submit</button>\n                                    </InputGroup>\n                                    <button type=\"button\" onClick={onStart} className=\"btn btn-outline-dark\">Start a new game! </button>\n                                </>\n                            :\n                                <>\n                                    <p className=\"congrats\">Good game! </p>\n                                    <button type=\"button\" onClick={onStart} className=\"btn btn-outline-dark\">Start a new game! </button>\n                                </>\n                            }\n                        </>\n                    }\n                </div>\n            </div>\n}\nexport default PopUp;","import { useState, useEffect } from \"react\";\nimport Switch from \"react-switch\";\nimport { getDataModel } from \"./DataModel\";\nimport { getLeaderboard } from \"./LeaderData\";\nimport Tile from \"./Tile\"\nimport PopUp from \"./PopUp\";\nimport \"./App.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst BOARD_SIZE = 8;\n\nfunction Chessboard() {\n    const dataModel = getDataModel();\n    const leaderboard = getLeaderboard();\n    const boardArray = dataModel.getBoardArray();\n    \n    const [leaders, setLeaders] = useState(leaderboard.getLeadersCopy());\n    const [visible, setVisible] = useState(false);\n    const [currentPlayer, setCurrentPlayer] = useState('Black');\n    const [numBlack, setNumBlack] = useState(2);\n    const [numWhite, setNumWhite] = useState(2);\n    const [switchStatus, setSwitchStatus] = useState(true);\n    const [isLegal, setLegal] = useState(true);\n    const [mode, setMode] = useState('computer'); // mode: 'multiplayer', 'computer'\n\n    function getBoardFromArray(boardArray) {\n        let board = [];\n        for (let i = 0; i < BOARD_SIZE; i++) {\n            for (let j = 0; j < BOARD_SIZE; j++) {\n                board.push(<Tile number={i+j+2} key={(i+1)*10+(j+1)} piece={boardArray[i][j]} \n                                onPress={async ()=>{\n                                    await dataModel.addPiece((i+1)*10+(j+1));\n                                    if(dataModel.checkWin()) setVisible(true);\n                                }}\n                            />);\n            }\n        }\n        return board;\n    }\n    const [board, setBoard] = useState(getBoardFromArray(boardArray));\n\n\n    useEffect(()=>{\n        dataModel.subscribeToUpdates(()=>{\n            setBoard(getBoardFromArray(dataModel.getBoardArray()));\n            setNumBlack(dataModel.getNumPieces(2));\n            setNumWhite(dataModel.getNumPieces(1));\n            setLegal(dataModel.getLegalStatus());\n            if(dataModel.getNextPlayer() === 2) setCurrentPlayer('Black');\n            else if(dataModel.getNextPlayer() === 1) setCurrentPlayer('White');\n        });\n        leaderboard.subscribeToUpdates(()=>{\n            setLeaders(leaderboard.getLeadersCopy());\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    function handleClose(){\n        setVisible(false);\n    }\n\n    function handleSwitch(checked){\n        setSwitchStatus(checked);\n        dataModel.setSwitchStatus(checked);\n        if(checked) dataModel.showLegalMoves();\n        else dataModel.clearLegalMoves();\n    }\n\n    function handleNewGame() {\n        dataModel.resetBoard(switchStatus);\n        dataModel.setMode('computer');\n        setMode('computer');\n    }\n    function handleMultiplayer() {\n        dataModel.resetBoard(switchStatus);\n        dataModel.setMode('multiplayer');\n        setMode('multiplayer');\n    }\n    return <div id=\"chessboard\">\n        <h1>REVERSI</h1>\n        <div className=\"control\">\n            <div className=\"menu\">\n                <button type=\"button\" className=\"btn btn-outline-dark\" onClick={handleNewGame}><span className=\"btn-text\">New Game</span></button>\n                <button type=\"button\" className=\"btn btn-outline-dark\" onClick={handleMultiplayer}><span className=\"btn-text\">Multiplayer</span></button>\n                <div className=\"switch\">\n                    <div><span className=\"btn-text\">Show legal moves</span></div>\n                    <Switch onChange={handleSwitch} checked={switchStatus} onColor={\"#292C6D\"} boxShadow={\"0 0 0.3em #292C6D\"}\n                    uncheckedIcon={false} checkedIcon={false} activeBoxShadow={null}/>\n                </div>\n            </div>\n        </div>\n\n        <div id=\"score-board\">\n            <div className=\"piece piece-black\" >{numBlack}</div>\n            <div className=\"info-box\">\n                <p id=\"turn\">{mode === 'multiplayer' ? `${currentPlayer}'s turn` : (currentPlayer === 'Black' ? 'Your turn' : 'Not your turn')}</p>\n                <p id='warning'>{isLegal ? '' : 'Sorry, this square is not a valid move.'}</p>\n            </div>\n            <div className=\"piece piece-white\">{numWhite}</div>\n        </div>\n        {visible ? <PopUp mode={mode} winner={dataModel.getWinner()} score={Math.max(numBlack, numWhite)} \n            onClose={handleClose} onSubmit={(playerName, score) => leaderboard.addItem(playerName, score)} onStart={()=>{\n                if (mode === 'computer') handleNewGame();\n                else if (mode === 'multiplayer') handleMultiplayer();\n                handleClose();\n        }}/> : null}\n        <div id=\"board-container\">\n            <div id=\"board\">\n                {board}\n            </div>\n        </div>\n    </div>;\n}\nexport default Chessboard;","import { useState, useEffect } from \"react\";\nimport { getLeaderboard } from \"./LeaderData\";\nimport \"./App.css\"\n\nfunction Leaderboard(){\n    const leaderboard = getLeaderboard();\n    const [leaders, setLeaders] = useState(leaderboard.getLeadersCopy());\n\n    useEffect(()=>{\n        leaderboard.subscribeToUpdates(()=>{\n            setLeaders(leaderboard.getLeadersCopy());\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    return <>\n        <div className=\"leaderboard\">\n            <h3>Leaderboard</h3>\n            <table>\n                <tr>\n                    <th>Name</th>\n                    <th>Score</th>\n                </tr>\n                {leaders.map((item) => <Item key={item.key} name={item.name} score={item.score}/>)}\n            </table>\n        </div>\n    </>\n}\n\nfunction Item(props) {\n    const {name, score} = props;\n    return <tr>\n            <td className=\"player-name\"><span className=\"player-name-span\">{name}</span></td>\n            <td>{score}</td>\n        </tr>;\n}\n\nexport default Leaderboard;\n","import \"./App.css\";\nimport Chessboard from \"./Chessboard\";\nimport Leaderboard from \"./Leaderboard\";\n\nfunction App() {\n  document.title = 'Reversi | SI 579 Final Project'\n  return (\n    <main>\n      <div className=\"big-container\">\n        <div className=\"hidden\"><Leaderboard /></div>\n        <Chessboard />\n        <Leaderboard />\n      </div>\n    </main> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}